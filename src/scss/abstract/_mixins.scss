@use 'sass:math';
@use '../abstract/variables' as *;
@use '../abstract/functions' as *;

@mixin clearfix {
    &::after {
        content: '';
        clear: both;
        display: table;
    }
}
@mixin clearfix100 {
    &::after {
        content: '';
        width: 100%;
        height: 100%;
        clear: both;
        display: block;
    }
}

@mixin absolutecenter {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

//Media query manager

$phone-size: 37.5em; // sm
$tab-port-size: 56.25em; // md
$tab-land-size: 75em; // lg
$big-screen-size: 112.5em; // xl

@mixin respond($breakpoint) {
    // 1em =16px

    @if $breakpoint == phone {
        @media (max-width: $phone-size) {
            // 600 px / 16 px = 37.5
            @content;
        }
    }
    @if $breakpoint == tab-port {
        //900px
        @media (max-width: $tab-port-size) {
            @content;
        }
    }
    @if $breakpoint == tab-land {
        //1200px
        @media (max-width: $tab-land-size) {
            @content;
        }
    }
    @if $breakpoint == big-screen {
        @media (min-width: $big-screen-size) {
            @content;
        }
    }
}

@mixin fluidFont($min-size, $max-size) {
    font-size: $max-size;
    font-size: calc(
        #{$min-size} + (#{strip-unit($max-size - $min-size)}) * ((
                        100vw - #{$phone-size}
                    ) / (#{strip-unit($tab-land-size + $phone-size)}))
    );
}
@mixin fluid($property, $min-size, $max-size) {
    #{$property}: $max-size;

    #{$property}: calc(
        #{$min-size} + (strip-unit($max-size - $min-size)) * ((
                        100vw - #{$phone-size}
                    ) / (#{strip-unit($tab-land-size + $phone-size)}))
    );
}

@mixin fluid-reverse($property, $min-size, $max-size) {
    #{$property}: $min-size;
    #{$property}: calc(
        #{$max-size} - (#{strip-unit($max-size - $min-size)}) * ((
                        100vw - #{$phone-size}
                    ) / (#{strip-unit($tab-land-size + $phone-size)}))
    );
}
@mixin fluid-percentage($property, $min-percentage, $max-percentage) {
    min-#{$property}: $min-percentage;
    #{$property}: calc(
        #{$min-percentage} - 0.1 * 10vw + 100 * (((#{$tab-land-size} - 100vw) /
                        (#{strip-unit($tab-land-size + $phone-size)})))
    );
    max-#{$property}: $max-percentage;
}

//- BOOTSTRAP ROW COL GENERATOR
@mixin generate-columns-all($columns) {
    @for $i from 1 through $columns {
        .col-#{$i} {
            flex: 0 0 percentage($i / $columns);
            max-width: percentage($i / $columns);
            padding: 0 15px;
        }
    }
}
@mixin generate-columns($columns, $screen-size) {
    @for $i from 1 through $columns {
        .col-#{$screen-size}-#{$i} {
            flex: 0 0 percentage($i / $columns);
            max-width: percentage($i / $columns);
            padding: 0 15px;
        }

        // @if $screen-size == xl {
        //   .col-xl-#{$i} {
        //     @include respond("big-screen") {
        //       flex: 0 0 percentage($i / $columns);
        //       max-width: percentage($i / $columns);
        //     }
        //   }
        // }
        // @if $screen-size == lg {
        //   .col-lg-#{$i} {
        //     @include respond("tab-land") {
        //       flex: 0 0 percentage($i / $columns);
        //       max-width: percentage($i / $columns);
        //     }
        //   }
        // }
        // @if $screen-size == md {
        //   .col-md-#{$i} {
        //     @include respond("tab-port") {
        //       flex: 0 0 percentage($i / $columns);
        //       max-width: percentage($i / $columns);
        //     }
        //   }
        // }
        // @if $screen-size == sm {
        //   .col-sm-#{$i} {
        //     @include respond("phone") {
        //       flex: 0 0 percentage($i / $columns);
        //       max-width: percentage($i / $columns);
        //     }
        //   }
        // }
    }
}
